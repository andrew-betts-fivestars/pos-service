// import { ActionType } from 'typesafe-actions';

import { Status } from './utils/enums';

//import * as rewardsActions from './actions';

export interface IRewardsState {
    rewards: IReward[];
    status?: Status.PENDING | Status.SUCCEEDED | Status.FAILED;
}

export interface IApiPerkRules {
    readonly reward_type?: string;
    readonly target_count?: number;
    readonly target_id?: string;
    readonly target_scope?: any;
    readonly trigger?: any;
    readonly trigger_data?: any;
    readonly units?: string;
    readonly value?: number;
}

export interface IApiReward {
    readonly active: boolean;
    readonly meta: object;
    readonly perk: string;
    readonly perk_rules?: IApiPerkRules;
    readonly perk_shortname: string;
    readonly point_cost: number;
    readonly uid: string;
}

export interface IPerkRules {
    readonly rewardType?: string;
    readonly targetCount?: number;
    readonly targetId?: string;
    readonly targetScope?: any;
    readonly trigger?: any;
    readonly triggerData?: any;
    readonly units?: string;
    readonly value?: number;
}

export interface IReward {
    readonly active: boolean;
    readonly meta: object;
    readonly perk: string;
    readonly perkRules?: IPerkRules;
    readonly perkShortname: string;
    readonly pointCost: number;
    readonly uid: string;
}

export interface ISetRewards {
    readonly rewards: IApiReward[];
}

// export type RewardsAction = ActionType<typeof rewardsActions>;
