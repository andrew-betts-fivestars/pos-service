import { CustomError } from 'ts-custom-error';
import { WebSocketCommonAction } from './utils/enums';
export interface WebSocketConfiguration {
    host: string;
    maxRetryDelay: number;
    pathEnd: string;
    pathStart: string;
    port: number;
    retryDelay: number;
    scheme: string;
}
export declare type ReconnectOptions = {
    tryReconnect: boolean;
};
export declare enum ReadyState {
    CONNECTING = 0,
    OPEN = 1,
    CLOSING = 2,
    CLOSED = 3
}
export declare type MessageAuthenticationResponse = {
    action: WebSocketCommonAction.AUTHENTICATION_RESPONSE;
    data: {
        success: boolean;
    };
};
export declare type MessageFailure = {
    action: WebSocketCommonAction.FAILURE;
};
export declare class WebSocketError extends CustomError {
    response: {
        status: number;
    };
    constructor(status: number, message?: string);
}
export declare enum WebSocketReconnectReason {
    UNACKED_MESSAGE = 0
}
