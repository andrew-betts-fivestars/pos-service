export declare enum PaymentTypes {
    CASH = "cash",
    CARD = "card",
    KEYED_ENTRY_PRESENT = "keyedEntryPresent",
    KEYED_ENTRY_NOT_PRESENT = "keyedEntryNotPresent",
    UNKNOWN = "unknown"
}
export declare enum CheckinType {
    PHONE = "phone",
    SWIPE = "swipe",
    DIP = "dip",
    NFC = "nfc"
}
export declare enum TipType {
    CUSTOM = "custom",
    DOLLAR = "dollar",
    PERCENTAGE = "percentage"
}
export declare enum Status {
    PENDING = "PENDING",
    SUCCEEDED = "SUCCEEDED",
    FAILED = "FAILED",
    NONE = "NONE"
}
export declare enum PayStatus {
    APPROVE_TOTAL = "approveTotal",
    AUTHORIZING_CARD = "authorizingCard",
    AUTHORIZING_REFUND = "authorizingRefund",
    CARDSWIPE = "cardSwipe",
    CARD_ACCEPTED = "cardAccepted",
    CARD_DECLINED = "cardDeclined",
    CARD_ERROR = "cardError",
    CHECKIN = "checkin",
    COMPLETE_ORDER = "completeOrder",
    CONFIRMATION = "confirmation",
    EARLY_CHECKIN = "earlyCheckin",
    EARLY_CHECKIN_ERROR = "earlyCheckinError",
    FETCHING_CUSTOMER = "fetchingCustomer",
    NO_REFUNDABLE_TRANSACTION = "noRefundableTransaction",
    PAY_CASH = "payCash",
    POINTS = "points",
    REFUND_CONFIRMATION = "refundConfirmation",
    REFUND_RESWIPE = "refundReswipe",
    REFUND_TRANSACTION_SELECTION = "refundTransactionSelection",
    REWARDS = "rewards",
    REWARDS_CONFIRMATION = "rewardsConfirmation",
    REWARDS_LIST = " rewardsList",
    SPLIT_PAYMENT_WAIT = "splitPaymentWait",
    CARD_READER_INTERSTITIAL = "cardReaderInterstitial",
    TIP = "tip",
    WAITING = "waiting"
}
export declare enum CardReadEventType {
    DIP_BEGIN = "dipBegin",
    DIP_ERROR = "dipError",
    DIP_FINISH = "dipFinish",
    SWIPE_FINISH = "swipeFinish",
    SWIPE_ERROR = "swipeError"
}
export declare enum AnalyticsEventCategory {
    TRANSACTION = "transaction",
    NON_TRANSACTION = "non-transaction"
}
export declare enum AnalyticsTrackerEventProperty {
    ACCOUNT_UID = "account uid",
    APP_TYPE = "APP_TYPE",
    BUSINESS_UID = "business uid",
    CONSUMER_PHONE_NUMBER = "Consumer phone number",
    DEVICE_SERIAL_NUMBER = "device serial number",
    DEVICE_MODEL = "device model",
    DURATION = "duration",
    END_STATE = "end state",
    ERROR_MESSAGE = "error_message",
    EVENT_NAME = "event",
    EXPERIMENT_CELL = "experiment cell",
    EXPERIMENT_NAME = "experiment name",
    LOG_ROCKET_URL = "log_rocket_url",
    PAY_MANUAL_TXN_FLAG = "pay_manual_txn_flag",
    PAY_TXN_TYPE = "pay_txn_type",
    SCREEN = "screen",
    SESSION_SEQUENCE_ID = "session_sequence_id",
    SESSION_ID = "session_id",
    SOFTWARE_ID = "software id",
    START_STATE = "start state",
    START_TIME = "start_time",
    STATUS = "status",
    TREASURE_DATA_PATH = "td_path",
    UI_ELEMENT = "ui element",
    WEBAPP_VERSION = "webapp_version",
    VERSION = "version",
    PRODUCT = "product",
    TRANSACTION_GROUP_ID = "transaction_group_id",
    PAY_TXN_AMOUNT = "pay_txn_amount",
    PAY_CARD_UID = "pay_card_uid",
    PROPERTIES = "properties",
    OUTAGES = "outages",
    APP_TIME = "app_time",
    ACTION = "action",
    OUTCOME = "outcome",
    PAY_CARD_REJECTED_BY = "pay_card_rejected_by",
    PAY_CARD_LINKED = "pay_card_linked",
    PAY_CC_TOKEN_FOUND = "pay_cc_token_found",
    PAY_FUNCTION = "pay_function",
    PAY_INIT_STATUS = "pay_init_status",
    PAY_NEW_CC_REGISTERED = "pay_new_cc_registered",
    PAY_NEW_USER_REGISTERED = "pay_new_user_registered",
    PAY_MTAB_SESSION_ID = "pay_mtab_session_id",
    PAY_REFUND_AMOUNT = "pay_refund_amount",
    PAY_REFUND_MATCH_COUNT = "pay_refund_match_count",
    PAY_REFUNDED_TXN_UID = "pay_refunded_txn_uid",
    PAY_TXN_UID = "pay_txn_uid",
    PAY_USER_FOUND = "pay_user_found",
    SELECTED_PROMO_TRACKER_UID = "selected_promo_tracker_uid",
    SELECTED_REWARD_TYPE = "selected_reward_type",
    SELECTED_REWARD_UID = "selected_reward_uid",
    PAY_TIP_TYPE = "pay_tip_type",
    USER_TIME = "user_time",
    CPAY_SESSION_ID = "cpay_session_id",
    EARLY_CHECKIN_FLOW_FLAG = "early_checkin_flow_flag"
}
export declare enum AnalyticsTrackerEventName {
    ALERT = "pay_alert",
    APP_START = "app_start",
    APP_STOP = "app_stop",
    APK_UPDATE = "pay_apk_update",
    APP_NIGHTLY_RESTART = "pay_app_nightly_restart",
    BLUETOOTH_ENABLE_ABORT = "pay_bluetooth_enable_abort",
    BUSINESS_LOCATION_REWARDS = "pay_business_location_rewards",
    CARD_READER = "card_reader",
    CLIENT_FEATURES = "pay_client_features",
    DOWNLOAD_APP = "download_app",
    ERROR_ACCOUNT_CHANGE = "pay_error_account_change",
    EXPERIMENT = "Experiment",
    FUNCTION_DURATION = "pay_function_duration",
    GET_CUSTOMER_FAILED = "pay_get_customer_failed",
    ENABLE_CHARGING_CALL = "pay_enable_charging_call",
    INTERNET_DOWN = "pay_internet_down",
    INTERNET_PROXIED = "pay_internet_proxied",
    INTERNET_STATUS = "pay_internet_status",
    INTERNET_STATUS_CHECK = "pay_internet_status_check",
    MESSENGER_OUTAGE = "pay_messenger_outage",
    MESSENGER_UPDATE_TRANSPORT = "pay_messenger_update_transport",
    NETWORK_AFFINITY_REQUEST = "pay_network_affinity_request",
    NETWORK_AFFINITY_STATS = "pay_network_affinity_stats",
    PAGE_DURATION = "pay_screen_duration",
    PAGE_TRANSITION = "page_transition",
    PAIRED_MESSAGE = "pay_paired_message",
    PAIRED_QUEUE_RECONNECT_TRANSPORT = "pay_paired_queue_reconnect_transport",
    PAIRED_QUEUE_UNACKNOWLEDGED = "pay_paired_queue_unacknowledged",
    PAY_BUTTON_CLICK = "pay_button_click",
    PAY_CARD_ENTRY = "pay_card_entry",
    PAY_CARD_ENTRY_ERROR = "pay_card_entry_error",
    PAY_CARD_IDENTITY = "pay_card_identity",
    PAY_DEVICE_PAIRED = "pay_device_paired",
    PAY_DEVICE_UNPAIRED = "pay_device_unpaired",
    PAY_MODAL_DISPLAYED = "pay_modal_displayed",
    PRINTER_ERROR = "pay_printer_error",
    PROXY_API_CALL = "pay_proxy_api_call",
    REGISTER_CUSTOMER_FAILED = "pay_register_customer_failed",
    REWARD_SKIPPED = "pay_reward_skipped",
    RETRY_BACKOFF = "pay_retry_backoff",
    ROUTER_DOWN = "pay_router_down",
    S3_UPLOAD = "pay_s3_upload",
    SESSION_START = "pay_session_start",
    SESSION_ENDED = "pay_session_ended",
    SESSION_START_SPLIT = "pay_session_start_split",
    SESSION_END_SPLIT = "pay_session_end_split",
    SESSION_NETSTAT = "pay_session_netstat",
    SESSION_TRAFFIC_STATS = "pay_session_traffic_stats",
    SHIPPED_HARDWARE = "pay_shipped_hardware",
    SIGN_IN_SKIPPED = "pay_user_sign_in_skipped",
    TIP_SKIPPED = "pay_tip_skipped",
    UDP_BROADCAST_OUTAGE = "pay_udp_broadcast_outage",
    USB_DEVICE_CHANGE = "pay_usb_device_change",
    VGS_RELOAD = "pay_vgs_reload",
    WEB_RTC_OUTAGE = "pay_web_rtc_outage",
    WEB_RTC_INITIATOR_ABORT = "pay_web_rtc_initiator_abort",
    WEB_SOCKET_DISCONNECT = "pay_web_socket_disconnect",
    WEB_SOCKET_PONG_TIMEOUT = "pay_web_socket_pong_timeout",
    CARD_LOGIN = "pay_card_login_completed",
    CARD_DIP = "pay_card_dip",
    CARD_NFC = "pay_card_nfc",
    CONFIRMATION_BACK = "pay_confirmation_screen_back_button_click",
    CONFIRMATION_SUBMIT = "pay_confirmation_screen_submit",
    CONFIRMATION_PHONE_SCREEN = "pay_confirmation_phone_screen",
    DUPLICATE_TRANSACTION_DETECTED = "pay_duplicate_transaction_detected",
    FULL_CARD_SWIPE = "pay_full_card_swipe",
    REFUND_TRANSACTION = "pay_refund_transaction",
    REFUND_TRANSACTIONS_LIST = "pay_refund_transactions_list",
    REWARD_DISPLAYED = "pay_reward_screen_displayed",
    REWARD_SELECTED = "pay_reward_selected",
    SIGN_IN_COMPLETE = "pay_user_sign_in_complete",
    SIGN_IN_DISPLAYED = "pay_user_sign_in_displayed",
    STRIPE_AUTH_DURATION = "pay_stripe_auth_duration",
    STRIPE_AUTH_FAIL = "pay_stripe_auth_failed",
    CUSTOM_TIP = "pay_custom_tip_pushed",
    PAY_CUSTOM_TIP_SCREEN_DURATION = "pay_custom_tip_screen_duration",
    PAY_CUSTOM_TIP_CANCELED = "pay_custom_tip_cancelled",
    PAY_CUSTOM_TIP_ENTERED = "pay_custom_tip_entered",
    PAY_TIP_ADDED = "pay_tip_added",
    CASH_BUTTON_PUSHED = "pay_cash_button_pushed",
    CASH_RECIVED = "pay_cash_received",
    CREDIT_BUTTON_PUSHED = "pay_credit_button_pushed",
    DUPLICATE_TRANSACTION_ALERT_DISPLAYED = "pay_duplicate_transaction_alert_displayed",
    DUPLICATE_TRANSACTION_ALERT_EXITED = "pay_duplicate_transaction_alert_exited",
    OCR_TOTAL_RECEIVED = "pay_total_received",
    PAY_OCR_VALUE = "pay_ocr_value",
    PAY_POINT_REFUND_COMPLETED = "pay_point_refund_complete",
    PAY_SALE_COMPLETED = "pay_sale_completed",
    PAY_TRANSACTION_DURATION = "pay_transaction_duration",
    PROCESSOR_REFUND_COMPLETED = "pay_processor_refund_completed",
    REWARD_APPLIED = "pay_reward_applied",
    REWARD_MODAL_INSTRUCTIONS_REMINDER_FROM_HOST = "pay_reward_modal_instructions_reminder_from_host",
    TRANSACTION_DURATION = "pay_transaction_duration",
    TRANSACTION_TYPE_UPDATED = "pay_txn_type_updated"
}
export declare enum AnalyticsTrackerButtonName {
    ACCEPT_CANCEL = "accept_cancel",
    ACCEPT_REWARD = "accept_reward",
    ALL_FILTERS_CLEARED = "all_filters_cleared",
    AMOUNT_FILTER_CLEARED = "amount_filter_cleared",
    APPLY_REWARD = "apply_reward",
    APPROVE_TOTAL = "approve_total",
    BACK = "back",
    BACK_TO_REWARDS = "back_to_rewards",
    CANCEL = "cancel",
    CANCEL_CHECKIN = "cancel_checkin",
    CANCEL_PRINTING = "cancel_printing",
    CANNOT_FIND_TRANSACTION = "cannot_find_transaction",
    CHARGE = "charge",
    CHECK_IN = "check_in",
    CLOSE_BANNER = "close_banner",
    CLOSE_MODAL = "close_modal",
    CONTACTLESS = "contactless",
    CONTINUE = "continue",
    CONTINUE_PAYMENT = "continue_payment",
    DATE_FILTER_CLEARED = "date_filter_cleared",
    DATE_PAGE_BACK = "date_page_back",
    DATE_PAGE_FORWARD = "date_page_forward",
    DECLINE_TOTAL = "decline_total",
    DIFFERENT_CARD = "different_card",
    DISMISS = "dismiss",
    DOWNLOAD_APP_SKIP = "skip_text_app",
    DOWNLOAD_APP_YES = "yes_text_app",
    ENTER_TRANSACTION_AMOUNT = "enter_transaction_amount",
    EQUAL_SPLIT = "equal_split",
    EXIT = "exit",
    GOT_IT = "got_it",
    LAST_4_FILTER_CLEARED = "last_4_filter_cleared",
    LOOKUP_REFUND = "lookup_refund",
    LOOKUP_TRANSACTION = "lookup_transaction",
    MANUAL_ENTRY = "manual_entry",
    NEXT_SPLIT = "next_split",
    NO_RECEIPT = "no_receipt",
    NO_TIP = "no_tip",
    OKAY = "okay",
    PAGE_DOWN = "page_down",
    PAGE_UP = "page_up",
    PHONE_ENTRY_FIELD_EXPAND = "phone_entry_field_expand",
    PHONE_ORDER = "phone_order",
    PRINT_RECEIPT = "print_receipt",
    REFUND = "refund",
    REJECT_CANCEL = "reject_cancel",
    REJECT_REWARD = "reject_reward",
    REWARD_CAROUSEL_SCROLL = "reward_carousel_scroll",
    REWARD_INSTRUCTIONS_BACK = "reward_instructions_reminder_back",
    REWARD_INSTRUCTIONS_REMINDER = "reward_instructions_reminder",
    REWARD_INSTRUCTIONS_REVIEW_REWARD = "reward_instructions_review_reward",
    REWARD_WAS_APPLIED = "reward_was_applied",
    REWARD_WAS_NOT_APPLIED = "rewards_was_not_applied",
    SELECT_REFUND = "select_refund",
    SIGNOUT = "signout",
    SKIP_AND_PAY = "skip_and_pay",
    SKIP_REWARDS = "skip_rewards",
    SPLIT_ORDER_SUMMARY_TAB = "split_order_summary_tab",
    SPLIT_PAYMENT = "split_payment",
    SPLIT_PAYMENTS_TAB = "split_payments_tab",
    SUBMIT = "submit",
    SWITCH_TO_CARD = "switch_to_card",
    SWITCH_TO_CASH = "switch_to_cash",
    TRANSACTION_FILTER_MODAL_CLOSED = "transaction_filter_modal_closed",
    TRAVERSE_REWARDS_LEFT = "traverse_rewards_left",
    TRAVERSE_REWARDS_RIGHT = "traverse_rewards_right",
    TRY_AGAIN = "try_again",
    VIEW_REWARDS_LIST = "view_rewards_list",
    WAIT_ON_POS = "wait_on_pos"
}
export declare enum AnalyticsTrackerUiElement {
    APPLY_REWARD_INSTRUCTION = "apply_reward_instruction",
    APPLY_REWARD_CONFIRMATION = "apply_reward_confirmation",
    CANNOT_FIND_TRANSACTION_MODAL = "cannot_find_transaction_modal",
    CARD_DECLINED_MODAL = "card_declined_modal",
    CARD_ERROR_MODAL = "card_error_modal",
    CUSTOMER_NO_REWARD_SELECTED = "customer_no_reward_selected",
    CUSTOMER_REWARD_SELECTED = "customer_reward_selected",
    CUSTOMER_SELECT_REWARD_WAIT = "customer_select_reward_wait",
    EARLY_CHECKIN_WAIT = "early_checkin_wait",
    NFC_REFUND_ERROR_MODAL = "nfc_refund_error_modal",
    NULL_OCR_MODAL = "null_ocr_modal",
    PROFILE_HEADER = "profile_header",
    REFUND_UNAVAILABLE_CASH = "refund_unavailable_cash",
    REFUND_UNAVAILABLE_OUT_OF_DATE = "refund_unavailable_out_of_date",
    REFUND_UNAVAILABLE_PREVIOUSLY_REFUNDED = "refund_unavailable_previously_refunded",
    REWARD_MODAL = "reward_modal",
    REWARD_REMOVED_BANNER = "reward_removed_banner",
    SERVER_DOWN_MODAL = "server_down_modal",
    SPLIT_CANCEL_MODAL = "split_cancel_modal",
    TRANSACTION_FILTER_MODAL = "transaction_filter_modal",
    TRANSACTION_HISTORY_CASH_DISCOUNT_INFO = "transaction_history_cash_discount_info"
}
export declare enum AnalyitcsTrackerErrorMessage {
    BAD_DIP = "badDip",
    BAD_SWIPE = "badSwipe",
    BAD_NFC = "badNfc"
}
export declare enum CardReaderEventPropertyValue {
    CARD_DIP_BEGIN = "cardDipBegin",
    CARD_DIP_ERROR = "cardDipError",
    CARD_DIP_FINISH = "cardDipFinish",
    CARD_NFC_BEGIN = "cardNfcBegin",
    CARD_NFC_ERROR = "cardNfcError",
    CARD_NFC_FINISH = "cardNfcFinish",
    CARD_REMOVED = "cardRemoved",
    CARD_SWIPE_ERROR = "cardSwipeError",
    CARD_SWIPE_FINISH = "cardSwipeFinish",
    START_CHIP_TRANSACTION_ERROR = "startChipTransactionError",
    START_NFC_TRANSACTION_ERROR = "startNfcTransactionError"
}
export declare enum CardReaderEventHardwareDevice {
    EDYNAMO = "MagTek eDynamo",
    DYNAWAVE = "MagTek DynaWave",
    PAX_A920 = "Pax A920"
}
export declare enum CardInputType {
    DIP = "emv",
    KEYED = "keyed",
    SWIPE = "swipe",
    NFC = "nfc"
}
export declare enum SortOrder {
    ASCENDING = "ASC",
    DESCENDING = "DESC"
}
export declare enum SupportContact {
    PHONE = "4152665995",
    DASHBOARD = "dashboard.fivestars.com",
    SUPPORT = "support.fivestars.com"
}
export declare enum Product {
    MPAY = "mpay",
    MPOS = "mpos",
    MREG = "mreg",
    CPAY = "cpay",
    WINPAY = "winpay",
    INSTORE = "instore",
    UPAY = "upay"
}
export declare enum DeviceType {
    PEGASUS = "Fivestars-Pegasus",
    PAX_A920 = "A920"
}
export declare enum KeypadMaxLength {
    PHONE = 10,
    MONEY = 7
}
export declare enum PayTxnStatus {
    FAILURE = "failure",
    SUCCESS = "success"
}
export declare enum WebSocketErrorEvent {
    FAILED_TO_RECONNECT = "failed to reconnect"
}
export declare enum WebSocketCommonAction {
    AUTHENTICATION_REQUEST = "ws.ack",
    AUTHENTICATION_RESPONSE = "ws.authAck",
    AUTHENTICATION_SUCCESS = "ws.authentication_success_received",
    AUTHENTICATION_FAILURE = "ws.authentication_failure_received",
    DEVICE_COUNTS = "device_counts",
    FAILURE = "ws.apiFail",
    PING = "ping",
    PONG = "pong",
    SUBSCRIBER_AUTHENTICATED = "subscriber_authenticated",
    SUBSCRIBER_DISCONNECTED = "subscriber_disconnected"
}
export declare enum AnalyticsTrackerStatus {
    FAILURE = "failure",
    OFFLINE = "offline",
    SUCCESS = "success",
    TIMEOUT = "timeout"
}
export declare enum Environment {
    DEVELOPMENT = "development",
    LOCAL = "local",
    PRODUCTION = "production",
    STAGING = "staging",
    TEST = "test"
}
export declare enum FeatureFlags {
    ARWING_EVERYWHERE = "arwing_everywhere",
    AUTOPOINTS = "sku",
    CASH_DISCOUNTING = "cash_discounting",
    CASHIER_TRACKING = "cashier_tracking",
    CTS = "cts",
    CTS_DESIGN_EXPERIMENTS = "cts_design_experiments",
    CTS_MANY_TO_MANY = "ctsManyToMany",
    CTS_REWARD_REDEMPTION = "cts_reward_redemption",
    DESIGN_EXPERIMENTS = "design_experiments",
    EVENT_RATE_LIMITS = "event_rate_limits",
    FAILSAFE = "failsafe",
    KEYED_ENTRY_DISABLED = "disable_keyed_card_entry",
    MANUAL_REFUNDS = "manual_refunds",
    MESSENGER_TRANSPORTS = "messenger_transports",
    NEARBY_REWARDS = "cts_nearby_rewards",
    NEARBY_REWARDS_DISABLED = "nearby_rewards_disabled",
    NETWORK_DISCOVERY = "network_discovery",
    NETWORK_LOYALTY = "network_loyalty",
    NETWORK_MATCHING = "network_matching",
    LOG_ROCKET = "log_rocket",
    ONDECK = "ondeck",
    ONE_POINT_DEFAULT = "one_point_default",
    OPT_OUT_CTS_HOMESCREEN = "opt_out_cts_homescreen",
    OPT_OUT_HOLIDAY_SCREEN = "opt_out_holiday_screen",
    OPT_OUT_MTABX = "opt_out_mtabx",
    OPT_OUT_WORD_OF_MOUTH = "opt_out_of_word_of_mouth",
    POINT_PER_DOLLAR = "one_point_per_dollar",
    POS_LINK = "pos_link",
    PROMOTION_SHARE = "promotion_share",
    REDUCED_SMS_THROTTLING = "reduced_sms_throttling",
    SQUARE = "square",
    STANDARDIZED_REWARDS = "standardized_rewards",
    STATUS_INSPIRED = "status_inspired",
    STRUCTURED_REWARDS = "structured_rewards",
    TIMEOUT_POINT = "timeout_point",
    TIP_SCREEN = "tip_screen",
    USE_REWARD_INSTRUCTIONS_EXPERIENCE = "pay_reward_instructions",
    PAIRED_MESSAGE_QUEUE_DISABLED = "websocket_message_queue_disabled",
    WEBSOCKET_PROXY = "ws_proxy"
}
export declare enum ClientFeatures {
    EARLY_CHECKIN = "early_checkin",
    NFC_PAYMENTS = "nfcPayments",
    PROCESS_LOYALTY_POINTS_ON_CONSUMER = "processLoyaltyPointsOnConsumer",
    PROXY_API_FOR_PAIRED_DEVICE = "proxy_api_for_paired_device",
    SPLIT_PAYMENTS = "splitPayments",
    CASH_DISCOUNTING = "cashDiscounting"
}
export declare enum ShutdownReason {
    POWER_DOWN = "PowerDown",
    RESTART = "Restart",
    CRITICAL_BATTERY_UNPLUGGED = "CriticalBatteryUnplugged"
}
export declare enum ShutdownSource {
    SET_CARD_READER_USB_PERMISSION = "set-card-reader-usb-permission",
    DEVICE_OS = "device-os",
    ENVIRONMENT_OVERRIDE = "environment-override",
    EXCEPTION = "exception",
    MISSION_CONTROL = "mission-control",
    MPAY = "mpay",
    CPAY = "cpay",
    NIGHTLY_RESTART = "nightly-restart",
    UNKNOWN = "unknown",
    UPGRADE = "upgrade"
}
export declare enum AnalyticsEventDatabaseOperation {
    STORE_COMPLETED_EVENT = "storeCompletedEvent",
    STORE_IN_PROGRESS_EVENT = "storeInProgressEvent"
}
export declare enum PropName {
    SERIAL_ALERTED = "persist.fs.serial_alerted",
    SERIAL_CURRENT = "persist.fs.serial_current",
    SERIAL_PERSIST = "persist.fs.serial_persist",
    LAUNCHER_BUSINESS_UID = "persist.fs.buid"
}
export declare enum InternetStatus {
    OK = "OK",
    DEGRADED = "DEGRADED",
    DOWN = "DOWN"
}
