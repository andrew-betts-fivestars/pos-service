// import { AxiosResponse } from 'axios';
// import { SagaIterator } from 'redux-saga';
// import { call } from 'redux-saga/effects';

// import { makeApiRequest } from '@instore/middleware/api/makeApiRequest';
// import { AnalyticsEventCategory } from '@instore/utils/enums';

// import { GetBusinessDetailsResponse } from '../types';
// import { LoyaltyUrls, URL } from '../urls';
// import { LOYALTY_PARAMS } from './params';

// export function* getBusinessDetails(): SagaIterator<AxiosResponse<GetBusinessDetailsResponse>> {
//     // Also gets feature flags and rewards
//     return yield call(makeApiRequest, {
//         ...LOYALTY_PARAMS,
//         category: AnalyticsEventCategory.NON_TRANSACTION,
//         functionName: 'getBusinessDetails',
//         maxRetryAttempts: 0,
//         method: 'get',
//         params: {
//             embed: 'business.rewards'
//         },
//         path: LoyaltyUrls.getBusinessPath(`${URL.PRODUCT}/${LoyaltyUrls.getApiKey()}`)
//     });
// }

// /**
//  * May not be used anymore?
//  */
// export function* getRewards() {
//     return yield call(makeApiRequest, {
//         ...LOYALTY_PARAMS,
//         functionName: 'getRewards',
//         method: 'get',
//         path: LoyaltyUrls.getBusinessPath('rewards')
//     });
// }
