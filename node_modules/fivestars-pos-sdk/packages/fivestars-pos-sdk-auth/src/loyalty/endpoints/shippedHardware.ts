// import { AxiosResponse } from 'axios';
// import { SagaIterator } from 'redux-saga';
// import { call } from 'redux-saga/effects';

// import { CONFIG } from '@app/config';
// import { device } from '@instore/hardware';
// import { makeApiRequest } from '@instore/middleware/api/makeApiRequest';
// import { HardwareVersion, Peripheral, ShippedHardwareConfiguration } from '@instore/redux/system/types';
// import { analyticsTracker } from '@instore/utils/analyticsTracker';
// import {
//     AnalyticsEventCategory,
//     AnalyticsTrackerEventName,
//     AnalyticsTrackerEventProperty,
//     AnalyticsTrackerStatus,
//     Product
// } from '@instore/utils/enums';
// import { log } from '@instore/utils/log';

// import { ShippedHardwareResponse } from '../types';
// import { AlwaysLoyaltyUrlProvider, LoyaltyUrls } from '../urls';
// import { LOYALTY_PARAMS } from './params';

// const LOG_PREFIX = 'loyaltyApi';

// export function* getShippedHardware(): SagaIterator<ShippedHardwareConfiguration> {
//     let responseData: ShippedHardwareResponse | null = null;
//     const shippedHardwareConfiguration: ShippedHardwareConfiguration = {
//         hardwareVersion: null,
//         peripherals: [],
//         product: null
//     };
//     const errors: string[] = [];

//     try {
//         const path = `shipped-hardware?hardware_identifier=${device.HARDWARE_ID}&device_type=${device.DEVICE_TYPE}`;
//         const RESPONSE: AxiosResponse<ShippedHardwareResponse> = yield call(makeApiRequest, {
//             ...LOYALTY_PARAMS,
//             category: AnalyticsEventCategory.NON_TRANSACTION,
//             functionName: 'getShippedHardware',
//             headerProvider: undefined,
//             maxRetryAttempts: 3,
//             method: 'get',
//             path: LoyaltyUrls.getRootApiPath(path),
//             urlProvider: new AlwaysLoyaltyUrlProvider()
//         });

//         if (!RESPONSE.data) {
//             return shippedHardwareConfiguration;
//         }

//         responseData = RESPONSE.data;

//         if (RESPONSE.data.software_type) {
//             if (
//                 RESPONSE.data.software_type === CONFIG.PRODUCT ||
//                 (RESPONSE.data.software_type === 'regpay' && CONFIG.PRODUCT === Product.MREG)
//             ) {
//                 shippedHardwareConfiguration.product = CONFIG.PRODUCT;
//             } else {
//                 log.info(
//                     `${LOG_PREFIX}::getShippedHardware`,
//                     `Product is ${CONFIG.PRODUCT} but shipped as ${RESPONSE.data.software_type}`
//                 );
//                 errors.push(`Product is ${CONFIG.PRODUCT} but shipped as ${RESPONSE.data.software_type}`);
//             }
//         }

//         if (RESPONSE.data.hardware_version) {
//             if (Object.values(HardwareVersion).includes(RESPONSE.data.hardware_version)) {
//                 shippedHardwareConfiguration.hardwareVersion = RESPONSE.data.hardware_version;
//             } else {
//                 log.info(
//                     `${LOG_PREFIX}::getShippedHardware`,
//                     `Hardware version ${RESPONSE.data.hardware_version} is not a known option`
//                 );
//                 errors.push(`Hardware version ${RESPONSE.data.hardware_version} is not a known option`);
//             }
//         }

//         if (RESPONSE.data.peripherals && Array.isArray(RESPONSE.data.peripherals)) {
//             RESPONSE.data.peripherals.forEach(peripheral => {
//                 if (Object.values(Peripheral).includes(peripheral)) {
//                     shippedHardwareConfiguration.peripherals.push(peripheral);
//                 } else {
//                     log.info(`${LOG_PREFIX}::getShippedHardware`, `Peripheral ${peripheral} is not a known option`);
//                     errors.push(`Peripheral ${peripheral} is not a known option`);
//                 }
//             });
//         }
//     } finally {
//         analyticsTracker.track(AnalyticsTrackerEventName.SHIPPED_HARDWARE, {
//             [AnalyticsTrackerEventProperty.PROPERTIES]: {
//                 errors,
//                 processed_response: shippedHardwareConfiguration,
//                 raw_response: responseData
//             },
//             [AnalyticsTrackerEventProperty.STATUS]:
//                 errors.length > 0 ? AnalyticsTrackerStatus.FAILURE : AnalyticsTrackerStatus.SUCCESS
//         });
//     }

//     return shippedHardwareConfiguration;
// }
