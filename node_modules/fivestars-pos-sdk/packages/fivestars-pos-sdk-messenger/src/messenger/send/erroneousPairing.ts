// import { SagaIterator } from 'redux-saga';
// import { put, take } from 'redux-saga/effects';
// import { ActionType } from 'typesafe-actions';

// import * as messengerActions from '@instore/redux/messenger/actions';
// import { log } from '@instore/utils/log';
// import { SkewAdjustedTime } from '@instore/utils/skewAdjustedTime';

// export const LOG_PREFIX = 'Communication::Send::erroneousPairing';

// export const handleErroneousPairing = function* (): SagaIterator<void> {
//     const DELAY_BEFORE_NOTIFY_IN_MS: number = 30 * 1000;
//     const sent: { [apiKey: string]: number } = {};

//     for (;;) {
//         const ACTION: ActionType<typeof messengerActions.erroneousPairing> = yield take(
//             messengerActions.erroneousPairing
//         );

//         let shouldSend = true;

//         if (ACTION.payload.erroneouslyPairedDeviceApiKey in sent) {
//             shouldSend =
//                 SkewAdjustedTime.now() - sent[ACTION.payload.erroneouslyPairedDeviceApiKey] >=
//                 DELAY_BEFORE_NOTIFY_IN_MS;
//         }

//         if (shouldSend) {
//             sent[ACTION.payload.erroneouslyPairedDeviceApiKey] = SkewAdjustedTime.now();
//             console.warn(
//                 `${LOG_PREFIX}::handleErroneousPairing`,
//                 `Received paired message ${ACTION.payload.erroneouslyPairedDeviceApiKey}`
//             );
//             yield put(
//                 messengerActions.sendErroneousPairing(
//                     ACTION.payload.erroneouslyPairedDeviceApiKey,
//                     ACTION.payload.thisDeviceApiKey
//                 )
//             );
//         }
//     }
// };
