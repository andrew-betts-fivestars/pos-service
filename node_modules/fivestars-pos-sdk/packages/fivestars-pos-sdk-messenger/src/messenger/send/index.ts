// import { all, fork, takeEvery, takeLatest } from 'redux-saga/effects';

// import * as messengerActions from '@instore/redux/messenger/actions';

// import { processBroadcastMessage } from './broadcast';
// import { handleErroneousPairing } from './erroneousPairing';
// import { processPairedMessage, sendSubscriberAuthenticated } from './paired';

// /**
//  * Sagas for sending a message
//  */
// export const watcher = function* () {
//     yield all([
//         takeEvery(messengerActions.sendBroadcast, processBroadcastMessage),
//         takeEvery(messengerActions.sendWebSocketServer, processBroadcastMessage),
//         takeEvery(messengerActions.sendPaired, processPairedMessage),

//         takeLatest(messengerActions.webSocket.authenticationSuccessful, sendSubscriberAuthenticated),
//         fork(handleErroneousPairing)
//     ]);
// };
    