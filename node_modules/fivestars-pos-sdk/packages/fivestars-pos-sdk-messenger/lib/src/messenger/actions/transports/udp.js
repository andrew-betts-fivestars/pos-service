"use strict";
// import { createAction } from 'typesafe-actions';
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateUdpPort = exports.pongReceived = exports.sendPing = exports.receivedPairedDeviceBroadcast = exports.stopped = exports.reconnectRequest = void 0;
// import { LOG_FILTER } from '@instore/utils/actions';
// export const reconnectRequest = createAction('UDP_RECONNECT_REQUEST');
var reconnectRequest = function () { return ({ action: 'UDP_RECONNECT_REQUEST' }); };
exports.reconnectRequest = reconnectRequest;
// export const stopped = createAction('UDP_STOPPED');
var stopped = function () { return ({ action: 'UDP_STOPPED' }); };
exports.stopped = stopped;
// export const receivedPairedDeviceBroadcast = createAction('UDP_RECEIVED_PAIRED_DEVICE_BROADCAST', resolve => () =>
//     resolve(LOG_FILTER)
// );
var receivedPairedDeviceBroadcast = function () { return ({ action: 'UDP_RECEIVED_PAIRED_DEVICE_BROADCAST' }); };
exports.receivedPairedDeviceBroadcast = receivedPairedDeviceBroadcast;
// export const sendPing = createAction('UDP_SEND_PING', resolve => () => resolve(LOG_FILTER));
var sendPing = function () { return ({ action: 'UDP_SEND_PING' }); };
exports.sendPing = sendPing;
// export const pongReceived = createAction('UDP_PONG_RECEIVED', resolve => () => resolve(LOG_FILTER));
var pongReceived = function () { return ({ action: 'UDP_PONG_RECEIVED' }); };
exports.pongReceived = pongReceived;
// export const updateUdpPort = createAction('MESSENGER_UDPATE_UDP_PORT', resolve => (udpPort: number) =>
//     resolve(udpPort)
// );
var updateUdpPort = function (port) { return ({ action: 'MESSENGER_UDPATE_UDP_PORT', data: port }); };
exports.updateUdpPort = updateUdpPort;
