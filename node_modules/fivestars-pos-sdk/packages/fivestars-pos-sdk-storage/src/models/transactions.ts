import { EarlyCheckinModal, Status, TransactionType } from '@fivestars-pos-sdk/types'
import { Money } from '@fivestars-pos-sdk/fivestars-pos-sdk-utils'

export type ITransactionsModel = {
    approveTotalNeeded: boolean,
    cardAuthorizationAttempts: Number,
    cardCompliantDetails: any | null,
    cardError: any | null,
    cardImpression: any | null,
    cashAmount: Money,
    cashDiscount: Money,
    cdAdjustment: Money,
    earlyCheckinModal: EarlyCheckinModal.NONE,
    failedOcr: any | null,
    failedOcrPayload: any | null,
    groupRefundFailures: [],
    groupRefundSuccesses: [],
    groupUid: null,
    groupUidStatus: Status.NONE,
    hostSplitPayment: false,
    idempotencyKey: null,
    initialTransactionAmount: Money,
    initialTransactionAmountMinusReward: Money,
    initiateTransactionSent: false,
    isConsumerMobileAppDownloadTextSent: false,
    isEarlyCheckin: false,
    options: {
        cashEnabled: true,
        groupUid: null,
        manualTransaction: false,
        showRewards: true,
        splitPayment: false,
        splitPaymentNumber: 1
    },
    orderSummaryOrderTabSelected: true,
    paymentType: '',
    pendingPayment: null,
    pendingRefund: null,
    points: 0,
    receiptUid: '',
    refundAmount: Money,
    refundStatus: Status.NONE,
    refundableTransactions: [],
    rewardApplied: false,
    selectedRefund: null,
    selectedReward: {
        active: false,
        itemName: '',
        perkShortName: '',
        pointCost: 0,
        type: '',
        uid: '',
        value: 0
    },
    sessionId: '',
    showCancelSplitPaymentModal: false,
    splitPayment: false,
    splitPaymentAmount: Money,
    splitPaymentCashDiscount: Money,
    splitPaymentCdAdjustment: Money,
    splitPaymentEqualSplitTotal: Money,
    splitPaymentEqualSplits: 0,
    splitPaymentNumber: 1,
    splitPaymentStates: [],
    splitPaymentTotalSplits: 0,
    tip: Money,
    transactionCompletedTime: null,
    transactionCreatedTime: null,
    transactionSent: false,
    transactionTotalUid: null,
    transactionType: TransactionType,
    transactionUid: '',
    transactionsCount: 0,
    transactionsList: [],
    transactionsListStatus: Status.NONE
}

export const TransactionsModel:ITransactionsModel = {
    approveTotalNeeded: false,
    cardAuthorizationAttempts: 0,
    cardCompliantDetails: null,
    cardError: null,
    cardImpression: null,
    cashAmount: new Money(0),
    cashDiscount: new Money(0),
    cdAdjustment: new Money(0),
    earlyCheckinModal: EarlyCheckinModal.NONE,
    failedOcr: null,
    failedOcrPayload: null,
    groupRefundFailures: [],
    groupRefundSuccesses: [],
    groupUid: null,
    groupUidStatus: Status.NONE,
    hostSplitPayment: false,
    idempotencyKey: null,
    initialTransactionAmount: new Money(0),
    initialTransactionAmountMinusReward: new Money(0),
    initiateTransactionSent: false,
    isConsumerMobileAppDownloadTextSent: false,
    isEarlyCheckin: false,
    options: {
        cashEnabled: true,
        groupUid: null,
        manualTransaction: false,
        showRewards: true,
        splitPayment: false,
        splitPaymentNumber: 1
    },
    orderSummaryOrderTabSelected: true,
    paymentType: '',
    pendingPayment: null,
    pendingRefund: null,
    points: 0,
    receiptUid: '',
    refundAmount: new Money(0),
    refundStatus: Status.NONE,
    refundableTransactions: [],
    rewardApplied: false,
    selectedRefund: null,
    selectedReward: {
        active: false,
        itemName: '',
        perkShortName: '',
        pointCost: 0,
        type: '',
        uid: '',
        value: 0
    },
    sessionId: '',
    showCancelSplitPaymentModal: false,
    splitPayment: false,
    splitPaymentAmount: new Money(0),
    splitPaymentCashDiscount: new Money(0),
    splitPaymentCdAdjustment: new Money(0),
    splitPaymentEqualSplitTotal: new Money(0),
    splitPaymentEqualSplits: 0,
    splitPaymentNumber: 1,
    splitPaymentStates: [],
    splitPaymentTotalSplits: 0,
    tip: new Money(0),
    transactionCompletedTime: null,
    transactionCreatedTime: null,
    transactionSent: false,
    transactionTotalUid: null,
    transactionType: TransactionType.NONE,
    transactionUid: '',
    transactionsCount: 0,
    transactionsList: [],
    transactionsListStatus: Status.NONE
}